# Production Nginx Configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with more details for production
    log_format main '[$time_local] $remote_addr - $remote_user "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Security headers log format
    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                       '"$http_x_forwarded_for" "$http_x_real_ip"';

    # Logging
    access_log /var/log/nginx/access.log main buffer=16k flush=2m;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    client_max_body_size 20m;
    large_client_header_buffers 2 1k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=strict:10m rate=1r/s;

    # Security headers (applied globally)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Hide nginx version
    server_tokens off;

    # SSL Configuration (if using SSL)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name your-domain.com www.your-domain.com;  # Replace with your actual domain

        # Redirect HTTP to HTTPS (uncomment when SSL is configured)
        # return 301 https://$server_name$request_uri;

        # Root directory
        root /var/www/html;  # Updated to standard production path
        index index.html index.htm;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;

        # Security: Block common exploit attempts
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* \.(env|git|gitignore|htaccess|htpasswd)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Main location block
        location / {
            try_files $uri $uri/ =404;
            
            # Security headers for HTML files
            location ~* \.html?$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
            }
        }

        # Static assets with long-term caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot|pdf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Optional: Enable CORS for fonts
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin "*";
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # API endpoints (if applicable)
        location /api/ {
            limit_req zone=strict burst=5 nodelay;
            
            # Proxy to backend (uncomment and configure as needed)
            # proxy_pass http://backend;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }
    }

    # HTTPS server block (uncomment when SSL certificate is available)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com www.your-domain.com;
    #
    #     # SSL certificate paths
    #     ssl_certificate /path/to/your/certificate.crt;
    #     ssl_certificate_key /path/to/your/private.key;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #
    #     # Root directory
    #     root /var/www/html;
    #     index index.html index.htm;
    #
    #     # Include all the location blocks from the HTTP server above
    #     # ... (copy all location blocks from above)
    # }

    # Upstream for load balancing (if needed)
    # upstream backend {
    #     least_conn;
    #     server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    #     server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
    # }
}